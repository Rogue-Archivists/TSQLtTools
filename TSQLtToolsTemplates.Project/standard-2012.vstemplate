<?xml version="1.0" encoding="utf-8"?>
<VSTemplate Version="3.0.0" Type="Project" xmlns="http://schemas.microsoft.com/developer/vstemplate/2005" xmlns:sdk="http://schemas.microsoft.com/developer/vstemplate-sdkextension/2010">
  <TemplateData>
    <!--
    If a .vstemplate file omits the TemplateID element, then the Name element is used as the identifier for the template.
    The value of the TemplateID element is used along with project system registration 
    (HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\<version number>\Projects\) to filter templates that appear in the Add New Item dialog box.
    https://msdn.microsoft.com/en-us/library/ms171388.aspx -->
    <TemplateID>89A42183-C2BF-4E57-A220-5CA8078418FE</TemplateID>

    <Name>SSDT Standard Project (SQL 2012)</Name>
    <Description>This template extends the default SSDT project to add best practices</Description>

    <ProjectType>SQLDB</ProjectType>
    <!-- VS 2019 search tags-->
    <LanguageTag>querylanguage</LanguageTag>
    <PlatformTag>windows</PlatformTag>
    <PlatformTag>linux</PlatformTag>

    <!-- http://www.flaticon.com/  and then https://www.icoconverter.com/ -->
    <Icon>tsqlt-logo.ico</Icon>

    <DefaultName>DBProject</DefaultName>
    <ProvideDefaultName>true</ProvideDefaultName>
    <CreateNewFolder>true</CreateNewFolder>
    <LocationField>Enabled</LocationField>
    <EnableLocationBrowseButton>true</EnableLocationBrowseButton>
  </TemplateData>

  <TemplateContent>

    <!-- https://docs.microsoft.com/en-us/visualstudio/ide/template-parameters?view=vs-2017#custom-template-parameters -->
    <CustomParameters>
      <CustomParameter Name="$sql_target$" Value="110"/>
    </CustomParameters>

    <Project ReplaceParameters="true" TargetFileName="$safeprojectname$.sqlproj" File="Content\standard.sqlproj" />

  </TemplateContent>

  <!-- 
    The registration elements for customizing the template wizard. 
    https://msdn.microsoft.com/en-us/library/ms171411.aspx 
  -->
  <!--  <WizardExtension /> -->

  <!-- 
      Any XML can be specified in this element. The XML will be passed as a parameter to the custom wizard extension, 
      allowing the extension to use the contents of this element. No validation is done on this data.
      The contents of the WizardData element are passed, unchanged, as a parameter inside the string dictionary of 
      parameters in the IWizard.RunStarted method. The parameter is named $WizardData$. 
   -->
  <!--  <WizardData />  -->

</VSTemplate>